// Mocks generated by Mockito 5.3.2 from annotations
// in kreditplus_deasy_website/test/modules/login/optimus_login_phone_step_one_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:ui' as _i20;

import 'package:deasy_device_info/deasy_device_info.dart' as _i18;
import 'package:deasy_pocket/deasy_pocket.dart' as _i14;
import 'package:flutter/material.dart' as _i13;
import 'package:flutter/scheduler.dart' as _i10;
import 'package:get/get.dart' as _i8;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i19;
import 'package:kreditplus_deasy_website/optimus/modules/login/controllers/optimus_login_controller.dart'
    as _i17;
import 'package:kreditplus_deasy_website/optimus/modules/login/controllers/optimus_login_phone_step_two_controller.dart'
    as _i21;
import 'package:kreditplus_deasy_website/optimus/modules/login/models/response/optimus_histories_login_response.dart'
    as _i4;
import 'package:kreditplus_deasy_website/optimus/modules/login/models/response/optimus_login_response.dart'
    as _i2;
import 'package:kreditplus_deasy_website/optimus/modules/login/models/response/request_otp_response.dart'
    as _i3;
import 'package:kreditplus_deasy_website/optimus/modules/login/repositories/optimus_login_repository.dart'
    as _i11;
import 'package:kreditplus_deasy_website/optimus/modules/login/views/widgets/optimus_login_dialog.dart'
    as _i15;
import 'package:kreditplus_deasy_website/optimus/modules/role_management/models/optimus_role_detail_response.dart'
    as _i7;
import 'package:kreditplus_deasy_website/optimus/modules/role_management/models/optimus_role_response.dart'
    as _i6;
import 'package:kreditplus_deasy_website/optimus/modules/role_management/repositories/optimus_menu_role_repository.dart'
    as _i16;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeOptimusLoginResponse_0 extends _i1.SmartFake
    implements _i2.OptimusLoginResponse {
  _FakeOptimusLoginResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseRequestOtp_1 extends _i1.SmartFake
    implements _i3.ResponseRequestOtp {
  _FakeResponseRequestOtp_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOptimusHistoriesLoginResponse_2 extends _i1.SmartFake
    implements _i4.OptimusHistoriesLoginResponse {
  _FakeOptimusHistoriesLoginResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferences_3 extends _i1.SmartFake
    implements _i5.SharedPreferences {
  _FakeSharedPreferences_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOptimusRoleResponse_4 extends _i1.SmartFake
    implements _i6.OptimusRoleResponse {
  _FakeOptimusRoleResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOptimusRoleDetailResponse_5 extends _i1.SmartFake
    implements _i7.OptimusRoleDetailResponse {
  _FakeOptimusRoleDetailResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxString_6 extends _i1.SmartFake implements _i8.RxString {
  _FakeRxString_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxBool_7 extends _i1.SmartFake implements _i8.RxBool {
  _FakeRxBool_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRx_8<T> extends _i1.SmartFake implements _i8.Rx<T> {
  _FakeRx_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_10<T> extends _i1.SmartFake
    implements _i8.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTicker_11 extends _i1.SmartFake implements _i10.Ticker {
  _FakeTicker_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({bool? debugIncludeStack = false}) => super.toString();
}

/// A class which mocks [OptimusLoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOptimusLoginRepository extends _i1.Mock
    implements _i11.OptimusLoginRepository {
  @override
  _i12.Future<_i2.OptimusLoginResponse> postApiLoginUseEmail(
    _i13.BuildContext? context, {
    required String? deviceId,
    required String? email,
    required String? password,
    String? eventName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postApiLoginUseEmail,
          [context],
          {
            #deviceId: deviceId,
            #email: email,
            #password: password,
            #eventName: eventName,
          },
        ),
        returnValue: _i12.Future<_i2.OptimusLoginResponse>.value(
            _FakeOptimusLoginResponse_0(
          this,
          Invocation.method(
            #postApiLoginUseEmail,
            [context],
            {
              #deviceId: deviceId,
              #email: email,
              #password: password,
              #eventName: eventName,
            },
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i2.OptimusLoginResponse>.value(
            _FakeOptimusLoginResponse_0(
          this,
          Invocation.method(
            #postApiLoginUseEmail,
            [context],
            {
              #deviceId: deviceId,
              #email: email,
              #password: password,
              #eventName: eventName,
            },
          ),
        )),
      ) as _i12.Future<_i2.OptimusLoginResponse>);
  @override
  _i12.Future<_i2.OptimusLoginResponse> postApiLoginUsePhoneNumber(
    _i13.BuildContext? context, {
    required String? otsCode,
    required String? phoneNumber,
    required String? deviceId,
    String? eventName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postApiLoginUsePhoneNumber,
          [context],
          {
            #otsCode: otsCode,
            #phoneNumber: phoneNumber,
            #deviceId: deviceId,
            #eventName: eventName,
          },
        ),
        returnValue: _i12.Future<_i2.OptimusLoginResponse>.value(
            _FakeOptimusLoginResponse_0(
          this,
          Invocation.method(
            #postApiLoginUsePhoneNumber,
            [context],
            {
              #otsCode: otsCode,
              #phoneNumber: phoneNumber,
              #deviceId: deviceId,
              #eventName: eventName,
            },
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i2.OptimusLoginResponse>.value(
            _FakeOptimusLoginResponse_0(
          this,
          Invocation.method(
            #postApiLoginUsePhoneNumber,
            [context],
            {
              #otsCode: otsCode,
              #phoneNumber: phoneNumber,
              #deviceId: deviceId,
              #eventName: eventName,
            },
          ),
        )),
      ) as _i12.Future<_i2.OptimusLoginResponse>);
  @override
  _i12.Future<_i3.ResponseRequestOtp> requestOTP(
    _i13.BuildContext? context,
    Map<String, dynamic>? requestBody,
    bool? showSnackbar,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestOTP,
          [
            context,
            requestBody,
            showSnackbar,
          ],
        ),
        returnValue:
            _i12.Future<_i3.ResponseRequestOtp>.value(_FakeResponseRequestOtp_1(
          this,
          Invocation.method(
            #requestOTP,
            [
              context,
              requestBody,
              showSnackbar,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i3.ResponseRequestOtp>.value(_FakeResponseRequestOtp_1(
          this,
          Invocation.method(
            #requestOTP,
            [
              context,
              requestBody,
              showSnackbar,
            ],
          ),
        )),
      ) as _i12.Future<_i3.ResponseRequestOtp>);
  @override
  _i12.Future<_i4.OptimusHistoriesLoginResponse> postApiHistoryLogin(
    _i13.BuildContext? context, {
    required String? appsVersion,
    String? browserType,
    String? browserVersion,
    String? deviceId,
    String? deviceModel,
    required String? email,
    bool? isMobile,
    double? latitude,
    double? longitude,
    String? osVersion,
    String? phoneNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postApiHistoryLogin,
          [context],
          {
            #appsVersion: appsVersion,
            #browserType: browserType,
            #browserVersion: browserVersion,
            #deviceId: deviceId,
            #deviceModel: deviceModel,
            #email: email,
            #isMobile: isMobile,
            #latitude: latitude,
            #longitude: longitude,
            #osVersion: osVersion,
            #phoneNumber: phoneNumber,
          },
        ),
        returnValue: _i12.Future<_i4.OptimusHistoriesLoginResponse>.value(
            _FakeOptimusHistoriesLoginResponse_2(
          this,
          Invocation.method(
            #postApiHistoryLogin,
            [context],
            {
              #appsVersion: appsVersion,
              #browserType: browserType,
              #browserVersion: browserVersion,
              #deviceId: deviceId,
              #deviceModel: deviceModel,
              #email: email,
              #isMobile: isMobile,
              #latitude: latitude,
              #longitude: longitude,
              #osVersion: osVersion,
              #phoneNumber: phoneNumber,
            },
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i4.OptimusHistoriesLoginResponse>.value(
                _FakeOptimusHistoriesLoginResponse_2(
          this,
          Invocation.method(
            #postApiHistoryLogin,
            [context],
            {
              #appsVersion: appsVersion,
              #browserType: browserType,
              #browserVersion: browserVersion,
              #deviceId: deviceId,
              #deviceModel: deviceModel,
              #email: email,
              #isMobile: isMobile,
              #latitude: latitude,
              #longitude: longitude,
              #osVersion: osVersion,
              #phoneNumber: phoneNumber,
            },
          ),
        )),
      ) as _i12.Future<_i4.OptimusHistoriesLoginResponse>);
}

/// A class which mocks [DeasyPocket].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeasyPocket extends _i1.Mock implements _i14.DeasyPocket {
  @override
  set prefs(_i12.Future<_i5.SharedPreferences>? _prefs) => super.noSuchMethod(
        Invocation.setter(
          #prefs,
          _prefs,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.SharedPreferences get sharedPreferences => (super.noSuchMethod(
        Invocation.getter(#sharedPreferences),
        returnValue: _FakeSharedPreferences_3(
          this,
          Invocation.getter(#sharedPreferences),
        ),
        returnValueForMissingStub: _FakeSharedPreferences_3(
          this,
          Invocation.getter(#sharedPreferences),
        ),
      ) as _i5.SharedPreferences);
  @override
  set sharedPreferences(_i5.SharedPreferences? _sharedPreferences) =>
      super.noSuchMethod(
        Invocation.setter(
          #sharedPreferences,
          _sharedPreferences,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i12.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool?> getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValue: _i12.Future<bool?>.value(),
        returnValueForMissingStub: _i12.Future<bool?>.value(),
      ) as _i12.Future<bool?>);
  @override
  _i12.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<String> getFcmToken() => (super.noSuchMethod(
        Invocation.method(
          #getFcmToken,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<bool> setFcmToken(String? value) => (super.noSuchMethod(
        Invocation.method(
          #setFcmToken,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> isUserLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isUserLoggedIn,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> isUserMerchant() => (super.noSuchMethod(
        Invocation.method(
          #isUserMerchant,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<String> getRole() => (super.noSuchMethod(
        Invocation.method(
          #getRole,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<void> setNewToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setNewToken,
          [token],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
  @override
  _i12.Future<bool> isMerchantOnline() => (super.noSuchMethod(
        Invocation.method(
          #isMerchantOnline,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<String> getSupplierIdOrAgentId() => (super.noSuchMethod(
        Invocation.method(
          #getSupplierIdOrAgentId,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<bool> isUserVerified() => (super.noSuchMethod(
        Invocation.method(
          #isUserVerified,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<String> getName() => (super.noSuchMethod(
        Invocation.method(
          #getName,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String> getEmail() => (super.noSuchMethod(
        Invocation.method(
          #getEmail,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String> getSupplierId() => (super.noSuchMethod(
        Invocation.method(
          #getSupplierId,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String> getBranchId() => (super.noSuchMethod(
        Invocation.method(
          #getBranchId,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String> getRoleId() => (super.noSuchMethod(
        Invocation.method(
          #getRoleId,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String> getRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String> getUserId() => (super.noSuchMethod(
        Invocation.method(
          #getUserId,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<bool> isUseSnb() => (super.noSuchMethod(
        Invocation.method(
          #isUseSnb,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> tutorialPassedMerchant() => (super.noSuchMethod(
        Invocation.method(
          #tutorialPassedMerchant,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> tutorialPassedAgent() => (super.noSuchMethod(
        Invocation.method(
          #tutorialPassedAgent,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<int> getLoginHistoriesId() => (super.noSuchMethod(
        Invocation.method(
          #getLoginHistoriesId,
          [],
        ),
        returnValue: _i12.Future<int>.value(0),
        returnValueForMissingStub: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);
  @override
  _i12.Future<String> getPhoneNumber() => (super.noSuchMethod(
        Invocation.method(
          #getPhoneNumber,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String> getAppsVersion() => (super.noSuchMethod(
        Invocation.method(
          #getAppsVersion,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String> getBrowserType() => (super.noSuchMethod(
        Invocation.method(
          #getBrowserType,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String> getBrowserVersion() => (super.noSuchMethod(
        Invocation.method(
          #getBrowserVersion,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String> getDeviceId() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceId,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<String?> getDeviceModel() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceModel,
          [],
        ),
        returnValue: _i12.Future<String?>.value(),
        returnValueForMissingStub: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);
  @override
  _i12.Future<bool> getIsMobile() => (super.noSuchMethod(
        Invocation.method(
          #getIsMobile,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<double?> getLatitude() => (super.noSuchMethod(
        Invocation.method(
          #getLatitude,
          [],
        ),
        returnValue: _i12.Future<double?>.value(),
        returnValueForMissingStub: _i12.Future<double?>.value(),
      ) as _i12.Future<double?>);
  @override
  _i12.Future<double?> getLongitude() => (super.noSuchMethod(
        Invocation.method(
          #getLongitude,
          [],
        ),
        returnValue: _i12.Future<double?>.value(),
        returnValueForMissingStub: _i12.Future<double?>.value(),
      ) as _i12.Future<double?>);
  @override
  _i12.Future<String> getOsVersion() => (super.noSuchMethod(
        Invocation.method(
          #getOsVersion,
          [],
        ),
        returnValue: _i12.Future<String>.value(''),
        returnValueForMissingStub: _i12.Future<String>.value(''),
      ) as _i12.Future<String>);
  @override
  _i12.Future<bool> getIsLoginByEmail() => (super.noSuchMethod(
        Invocation.method(
          #getIsLoginByEmail,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<void> saveSupplierId(String? supplierId) => (super.noSuchMethod(
        Invocation.method(
          #saveSupplierId,
          [supplierId],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
  @override
  _i12.Future<void> saveSnbSettingResponse({
    bool? isShowDp = false,
    bool? useSnb = false,
    bool? isMaintenanceMode = false,
    int? qrCodeTimer = 0,
    int? retryGenerateQrCount = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSnbSettingResponse,
          [],
          {
            #isShowDp: isShowDp,
            #useSnb: useSnb,
            #isMaintenanceMode: isMaintenanceMode,
            #qrCodeTimer: qrCodeTimer,
            #retryGenerateQrCount: retryGenerateQrCount,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
  @override
  _i12.Future<int> getQrCodeTimer() => (super.noSuchMethod(
        Invocation.method(
          #getQrCodeTimer,
          [],
        ),
        returnValue: _i12.Future<int>.value(0),
        returnValueForMissingStub: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);
  @override
  _i12.Future<int> getRetryGenerateQrCount() => (super.noSuchMethod(
        Invocation.method(
          #getRetryGenerateQrCount,
          [],
        ),
        returnValue: _i12.Future<int>.value(0),
        returnValueForMissingStub: _i12.Future<int>.value(0),
      ) as _i12.Future<int>);
  @override
  _i12.Future<bool> getUseSnb() => (super.noSuchMethod(
        Invocation.method(
          #getUseSnb,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getShowDp() => (super.noSuchMethod(
        Invocation.method(
          #getShowDp,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setDeleteAccountOnProcess(bool? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDeleteAccountOnProcess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setOfflineAccess(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setOfflineAccess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setSnbAccess(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setSnbAccess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setOnlineAccess(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setOnlineAccess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setPOAccess(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setPOAccess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setRequestCancel(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setRequestCancel,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setInvoiceAccess(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setInvoiceAccess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setViewBASTAccess(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setViewBASTAccess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setViewBuktiTerimaAccess(bool? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setViewBuktiTerimaAccess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setViewImeiAccess(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setViewImeiAccess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setUploadBASTAccess(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setUploadBASTAccess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setUploadBuktiTerimaAccess(bool? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUploadBuktiTerimaAccess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setUploadImeiAccess(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setUploadImeiAccess,
          [value],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getOfflineAccess() => (super.noSuchMethod(
        Invocation.method(
          #getOfflineAccess,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getSnbAccess() => (super.noSuchMethod(
        Invocation.method(
          #getSnbAccess,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getOnlineAccess() => (super.noSuchMethod(
        Invocation.method(
          #getOnlineAccess,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getPOAccess() => (super.noSuchMethod(
        Invocation.method(
          #getPOAccess,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getRequestCancel() => (super.noSuchMethod(
        Invocation.method(
          #getRequestCancel,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getInvoiceAccess() => (super.noSuchMethod(
        Invocation.method(
          #getInvoiceAccess,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getViewBASTAccess() => (super.noSuchMethod(
        Invocation.method(
          #getViewBASTAccess,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getViewBuktiTerimaAccess() => (super.noSuchMethod(
        Invocation.method(
          #getViewBuktiTerimaAccess,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getViewImeiAccess() => (super.noSuchMethod(
        Invocation.method(
          #getViewImeiAccess,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getUploadBASTAccess() => (super.noSuchMethod(
        Invocation.method(
          #getUploadBASTAccess,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getUploadBuktiTerimaAccess() => (super.noSuchMethod(
        Invocation.method(
          #getUploadBuktiTerimaAccess,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> getUploadImeiAccess() => (super.noSuchMethod(
        Invocation.method(
          #getUploadImeiAccess,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setRoleMenuPermission(
          Map<String, dynamic>? menuPermission) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRoleMenuPermission,
          [menuPermission],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setRoleDashboardPermission(
          Map<String, dynamic>? dashboardPermission) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRoleDashboardPermission,
          [dashboardPermission],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<bool> setRoleDetail(Map<String, dynamic>? roleData) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRoleDetail,
          [roleData],
        ),
        returnValue: _i12.Future<bool>.value(false),
        returnValueForMissingStub: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
  @override
  _i12.Future<Map<String, dynamic>> getRoleDetail() => (super.noSuchMethod(
        Invocation.method(
          #getRoleDetail,
          [],
        ),
        returnValue:
            _i12.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i12.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i12.Future<Map<String, dynamic>>);
  @override
  _i12.Future<Map<String, dynamic>> getRoleDashboardPermission() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoleDashboardPermission,
          [],
        ),
        returnValue:
            _i12.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i12.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i12.Future<Map<String, dynamic>>);
  @override
  _i12.Future<Map<String, dynamic>> getMenuPermission() => (super.noSuchMethod(
        Invocation.method(
          #getMenuPermission,
          [],
        ),
        returnValue:
            _i12.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i12.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i12.Future<Map<String, dynamic>>);
  @override
  _i12.Future<bool?> getIsDealerSubsidies() => (super.noSuchMethod(
        Invocation.method(
          #getIsDealerSubsidies,
          [],
        ),
        returnValue: _i12.Future<bool?>.value(),
        returnValueForMissingStub: _i12.Future<bool?>.value(),
      ) as _i12.Future<bool?>);
  @override
  _i12.Future<int?> getOtpTimer() => (super.noSuchMethod(
        Invocation.method(
          #getOtpTimer,
          [],
        ),
        returnValue: _i12.Future<int?>.value(),
        returnValueForMissingStub: _i12.Future<int?>.value(),
      ) as _i12.Future<int?>);
  @override
  _i12.Future<void> setOtpTimer(int? time) => (super.noSuchMethod(
        Invocation.method(
          #setOtpTimer,
          [time],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
  @override
  _i12.Future<void> removeOtpTimer() => (super.noSuchMethod(
        Invocation.method(
          #removeOtpTimer,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [OptimusLoginDialog].
///
/// See the documentation for Mockito's code generation for more information.
class MockOptimusLoginDialog extends _i1.Mock
    implements _i15.OptimusLoginDialog {}

/// A class which mocks [OptimusMenuRoleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOptimusMenuRoleRepository extends _i1.Mock
    implements _i16.OptimusMenuRoleRepository {
  @override
  _i12.Future<_i6.OptimusRoleResponse> getMenuPermission(
    _i13.BuildContext? context,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMenuPermission,
          [
            context,
            userId,
          ],
        ),
        returnValue: _i12.Future<_i6.OptimusRoleResponse>.value(
            _FakeOptimusRoleResponse_4(
          this,
          Invocation.method(
            #getMenuPermission,
            [
              context,
              userId,
            ],
          ),
        )),
        returnValueForMissingStub: _i12.Future<_i6.OptimusRoleResponse>.value(
            _FakeOptimusRoleResponse_4(
          this,
          Invocation.method(
            #getMenuPermission,
            [
              context,
              userId,
            ],
          ),
        )),
      ) as _i12.Future<_i6.OptimusRoleResponse>);
  @override
  _i12.Future<_i7.OptimusRoleDetailResponse> getDetailRole(
    _i13.BuildContext? context,
    String? roleId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailRole,
          [
            context,
            roleId,
          ],
        ),
        returnValue: _i12.Future<_i7.OptimusRoleDetailResponse>.value(
            _FakeOptimusRoleDetailResponse_5(
          this,
          Invocation.method(
            #getDetailRole,
            [
              context,
              roleId,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i12.Future<_i7.OptimusRoleDetailResponse>.value(
                _FakeOptimusRoleDetailResponse_5(
          this,
          Invocation.method(
            #getDetailRole,
            [
              context,
              roleId,
            ],
          ),
        )),
      ) as _i12.Future<_i7.OptimusRoleDetailResponse>);
}

/// A class which mocks [OptimusLoginController].
///
/// See the documentation for Mockito's code generation for more information.
class MockOptimusLoginController extends _i1.Mock
    implements _i17.OptimusLoginController {
  @override
  _i8.RxString get appVersion => (super.noSuchMethod(
        Invocation.getter(#appVersion),
        returnValue: _FakeRxString_6(
          this,
          Invocation.getter(#appVersion),
        ),
        returnValueForMissingStub: _FakeRxString_6(
          this,
          Invocation.getter(#appVersion),
        ),
      ) as _i8.RxString);
  @override
  set deviceId(String? _deviceId) => super.noSuchMethod(
        Invocation.setter(
          #deviceId,
          _deviceId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set deviceModel(String? _deviceModel) => super.noSuchMethod(
        Invocation.setter(
          #deviceModel,
          _deviceModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set deviceOs(String? _deviceOs) => super.noSuchMethod(
        Invocation.setter(
          #deviceOs,
          _deviceOs,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set browserType(String? _browserType) => super.noSuchMethod(
        Invocation.setter(
          #browserType,
          _browserType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set browserVersion(String? _browserVersion) => super.noSuchMethod(
        Invocation.setter(
          #browserVersion,
          _browserVersion,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set tabController(_i13.TabController? _tabController) => super.noSuchMethod(
        Invocation.setter(
          #tabController,
          _tabController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.RxBool get showForgotPassword => (super.noSuchMethod(
        Invocation.getter(#showForgotPassword),
        returnValue: _FakeRxBool_7(
          this,
          Invocation.getter(#showForgotPassword),
        ),
        returnValueForMissingStub: _FakeRxBool_7(
          this,
          Invocation.getter(#showForgotPassword),
        ),
      ) as _i8.RxBool);
  @override
  set showForgotPassword(_i8.RxBool? _showForgotPassword) => super.noSuchMethod(
        Invocation.setter(
          #showForgotPassword,
          _showForgotPassword,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i12.Future<_i5.SharedPreferences> get sharedPreference =>
      (super.noSuchMethod(
        Invocation.getter(#sharedPreference),
        returnValue:
            _i12.Future<_i5.SharedPreferences>.value(_FakeSharedPreferences_3(
          this,
          Invocation.getter(#sharedPreference),
        )),
        returnValueForMissingStub:
            _i12.Future<_i5.SharedPreferences>.value(_FakeSharedPreferences_3(
          this,
          Invocation.getter(#sharedPreference),
        )),
      ) as _i12.Future<_i5.SharedPreferences>);
  @override
  set sharedPreference(_i12.Future<_i5.SharedPreferences>? _sharedPreference) =>
      super.noSuchMethod(
        Invocation.setter(
          #sharedPreference,
          _sharedPreference,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Rx<_i18.DeasyDeviceInfo> get device => (super.noSuchMethod(
        Invocation.getter(#device),
        returnValue: _FakeRx_8<_i18.DeasyDeviceInfo>(
          this,
          Invocation.getter(#device),
        ),
        returnValueForMissingStub: _FakeRx_8<_i18.DeasyDeviceInfo>(
          this,
          Invocation.getter(#device),
        ),
      ) as _i8.Rx<_i18.DeasyDeviceInfo>);
  @override
  _i8.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_10<void>(
          this,
          Invocation.getter(#onStart),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_10<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i8.InternalFinalCallback<void>);
  @override
  _i8.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_10<void>(
          this,
          Invocation.getter(#onDelete),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_10<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i8.InternalFinalCallback<void>);
  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i12.Future<dynamic> getAppVersion() => (super.noSuchMethod(
        Invocation.method(
          #getAppVersion,
          [],
        ),
        returnValue: _i12.Future<dynamic>.value(),
        returnValueForMissingStub: _i12.Future<dynamic>.value(),
      ) as _i12.Future<dynamic>);
  @override
  String? sendLoginTabEvent(int? index) => (super.noSuchMethod(
        Invocation.method(
          #sendLoginTabEvent,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as String?);
  @override
  _i12.Future<void> saveDataToLocalAfterDoLogin({
    required _i2.LoginData? response,
    required bool? isLoginByEmail,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDataToLocalAfterDoLogin,
          [],
          {
            #response: response,
            #isLoginByEmail: isLoginByEmail,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
  @override
  void updateFCMToken(_i2.LoginData? value) => super.noSuchMethod(
        Invocation.method(
          #updateFCMToken,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i12.Future<dynamic> getDeviceId() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceId,
          [],
        ),
        returnValue: _i12.Future<dynamic>.value(),
        returnValueForMissingStub: _i12.Future<dynamic>.value(),
      ) as _i12.Future<dynamic>);
  @override
  _i12.Future<dynamic> getDeviceModel() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceModel,
          [],
        ),
        returnValue: _i12.Future<dynamic>.value(),
        returnValueForMissingStub: _i12.Future<dynamic>.value(),
      ) as _i12.Future<dynamic>);
  @override
  _i12.Future<dynamic> getDeviceOs() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceOs,
          [],
        ),
        returnValue: _i12.Future<dynamic>.value(),
        returnValueForMissingStub: _i12.Future<dynamic>.value(),
      ) as _i12.Future<dynamic>);
  @override
  bool checkRoleForMobile(_i2.OptimusLoginResponse? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkRoleForMobile,
          [value],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool checkRoleForWeb(_i2.OptimusLoginResponse? value) => (super.noSuchMethod(
        Invocation.method(
          #checkRoleForWeb,
          [value],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void checkDeleteAccountStatus() => super.noSuchMethod(
        Invocation.method(
          #checkDeleteAccountStatus,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i12.Future<void> deleteMyAccount() => (super.noSuchMethod(
        Invocation.method(
          #deleteMyAccount,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
  @override
  _i12.Future<dynamic> retrieveDeepLink() => (super.noSuchMethod(
        Invocation.method(
          #retrieveDeepLink,
          [],
        ),
        returnValue: _i12.Future<dynamic>.value(),
        returnValueForMissingStub: _i12.Future<dynamic>.value(),
      ) as _i12.Future<dynamic>);
  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.Disposer addListener(_i19.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i19.Disposer);
  @override
  void removeListener(_i20.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListenerId(
    Object? id,
    _i20.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i19.Disposer addListenerId(
    Object? key,
    _i19.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i19.Disposer);
  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Ticker createTicker(_i10.TickerCallback? onTick) => (super.noSuchMethod(
        Invocation.method(
          #createTicker,
          [onTick],
        ),
        returnValue: _FakeTicker_11(
          this,
          Invocation.method(
            #createTicker,
            [onTick],
          ),
        ),
        returnValueForMissingStub: _FakeTicker_11(
          this,
          Invocation.method(
            #createTicker,
            [onTick],
          ),
        ),
      ) as _i10.Ticker);
}

/// A class which mocks [LoginSnackbar].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginSnackbar extends _i1.Mock implements _i21.LoginSnackbar {
  @override
  void showFlushbarError(
    _i13.BuildContext? context,
    String? message,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #showFlushbarError,
          [
            context,
            message,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
