def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}


def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'  // Google Services plugin
apply plugin: 'com.google.firebase.crashlytics'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 33

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.kreditplus.kreditplus_deasy_website"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    lintOptions {
        disable 'InvalidPackage','Deprecated'
        checkReleaseBuilds false
        ignoreWarnings true
        abortOnError false
        ignoreWarnings true
    }
    signingConfigs {
        release {
            //From decoded key
            storeFile = file('key.jks')

            //From key.properties
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    flavorDimensions 'flutterFlavors'

    productFlavors {
        dev {
            dimension "flutterFlavors"
            resValue "string", "app_name", "Dev Deasy"
            applicationIdSuffix '.dev'
        }
        staging {
            dimension 'flutterFlavors'
            applicationIdSuffix '.staging'
            versionNameSuffix '-staging'
            resValue "string", "app_name", "Staging Deasy"
        }
        prod {
            dimension "flutterFlavors"
            resValue "string", "app_name", "Deasy"
            proguardFile 'proguard-rules.pro'
            applicationId 'com.kreditplus.kreditplus_deasy_website'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            output.outputFileName = "deasy-${variant.getFlavorName()}-${variant.buildType.name}-v${versionName}-${new Date().format('ddMMyyyy')}.apk"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.firebase:firebase-crashlytics'
}
